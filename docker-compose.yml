version: '3.4'

services:
  backend:
    hostname: backend
    image: corpool-backend
    depends_on:
     - mongo-primary
    build:
      context: .
      dockerfile: backend/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - SUB_ENV=Docker
      - ASPNETCORE_URLS=http://+:80
      - Mongo__Host=mongo-primary
      - Mongo__Port=27017
      - Mongo__Username=root
      - Mongo__Password=root
      - Mongo__ReplicaSetName=replicaset
    ports:
      - "33080:80"
  
  frontend:
    image: corpool-frontend
    depends_on:
      - backend
    ports:
      - "32080:80"
    environment:
      - BACKEND_SERVER=backend
      - BACKEND_PORT=80
    build:
      context: frontend
      dockerfile: Dockerfile


  # MongoDB replication set
  mongo-primary:
    image: 'bitnami/mongodb:latest'
    restart: always
    scale: 1
    hostname: mongo-primary
    ports:
      - "33017:27017"
    environment:
      - MONGODB_ADVERTISED_HOSTNAME=mongo-primary
      - MONGODB_REPLICA_SET_NAME=replicaset
      - MONGODB_REPLICA_SET_MODE=primary
      - MONGODB_USERNAME=root
      - MONGODB_PASSWORD=root
      - MONGODB_ROOT_PASSWORD=root
      - MONGODB_REPLICA_SET_KEY=corpoolreplica
    volumes:
      - ./data/mongo:/bitnami/mongodb
    
  mongo-secondary: # scalable
    image: 'bitnami/mongodb:latest'
    restart: always
    # hostname: mongo-secondary
    ports:
     - "33018-33025:27017"
    depends_on:
      - mongo-primary
    environment:
      # - MONGODB_ADVERTISED_HOSTNAME=${hostname}
      - MONGODB_REPLICA_SET_MODE=secondary
      - MONGODB_REPLICA_SET_NAME=replicaset
      - MONGODB_INITIAL_PRIMARY_HOST=mongo-primary
      # - MONGODB_INITIAL_PRIMARY_PORT=27017  <-- this is the default value
      - MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD=root
      - MONGODB_REPLICA_SET_KEY=corpoolreplica
    scale: 2